// Typeface(s) and Fonts

$source-sans: (
  face: 'source sans pro',
  hairline: 200,
  light: 300,
  normal: 400,
  semi: 600,
  bold: 700,
  heavy: 900
);

$sans: (
  face: 'Roboto',
  hairline: 100,
  light: 300,
  normal: 400,
  semi: 600,
  bold: 700,
  heavy: 900
);

$serif: (
  face: 'source serif pro',
  normal: 400,
  semi: 600,
  bold: 700
);

$mono: (
  face: 'source code pro',
  hairline: 200,
  light: 300,
  normal: 400,
  semi: 600,
  bold: 700,
  heavy: 900
);

$open-condensed: (
  face: 'Open Sans Condensed',
  light: 300,
  bold: 700
);

$condensed: (
  face: 'Roboto Condensed',
  light: 300,
  normal: 300,
  bold: 700
);

$slab: (
  face: 'Roboto Slab',
  hairline: 100,
  light: 300,
  normal: 400,
  bold: 700
);

$fat: (
  face: 'Alfa Slab One',
  heavy: 400
);


//Just remaning for semantic use
@function font($typeface-map, $key) {
  @return map-get($typeface-map, $key);
}

//$sans: 'source sans pro', sans-serif;
//$monospace: 'source code pro', monospace;
//$serif: 'source serif pro';
//$slab: "Museo Slab";
//$condensed:'Open Sans Condensed', sans-serif;
//$thick: "Quatro";
//$serif: "learning-curve";

// Weight(s) - Related to Source Sans Pro (Typekit)
//$hairline:200;
//$light: 300;
//$normal: 400;
//$bold: 700;
//$heavy:900;

// Base typography vars
$line-height : 1.5;
$base-font-size: 20px;
$baseline-height: round($base-font-size * $line-height);
//$baseline-position: $base-font-size;
$baseline-color : rgba(magenta, 0.1);
$max-width: 800px;

// Snap to baseline mixin
@mixin snap-to-baseline($aspect-ratio){
  $width-per-baseline: $baseline-height * $aspect-ratio;
  @for $i from 1 to round($max-width / $width-per-baseline) {
    &[min-width~="#{round($width-per-baseline * $i )}"] {
      height: round($baseline-height * $i );
    }
  }
}

// Smart spacing mixin
$inside : padding;
$outside : margin;
$text : margin;

@mixin spacing($space-type, $top:1, $bottom:1) {
  #{$space-type}-top: $baseline-height * $top;
  #{$space-type}-bottom: $baseline-height * $bottom;
}

@mixin line-height( $multiplier:1 ) {
  line-height: $multiplier * $baseline-height;
}

html {
  font-size: $base-font-size; // Enable REM usage
}

body {
  font-family: font($slab, face);
  font-weight: font($slab, light);
  line-height: $line-height;
  background-color:#fff;
  background-image: linear-gradient(transparent, transparent $baseline-height - 1px, $baseline-color 1px);
  background-size : auto $baseline-height;
}

h1, h2, h3, h4, h5, h6 {
  background-color: rgba($mint, 1);
  //font-weight: font($condensed, normal);
  font-size: 1rem;
  //line-height: 2 * $baseline-height;
}

.mega-word {
  overflow: hidden;
  position: relative;

  &__text {
    color: $white;
    background-color: $charcoal;
    font-family: font($slab, face);
    font-size: 10rem;
    font-weight: font($slab, hairline);
    @include spacing($text, 0, 1);
    @include line-height(8);
    text-transform: uppercase;
    transition: all .5s ease-in-out;

    &[max-width~="960px"] {
      font-size: 20vw;
    }
  }

  &::before {
    content: "";
    background-color: $white;
    bottom: -1%;
    height: 40%;
    position: absolute;
    width: 120%;
    z-index: 10;

    //transform-origin: 0 100%;
    transform: rotate(-3deg);
    //background: linear-gradient(90deg, #965ddc 0%, #b087e5 100%);
  }
}

p, ul, ol, pre {
  @include spacing($outside, 0, 1);
}


/*
h3 {
  background-color: #ff0;
  font-weight: 300;
  font-size: 2rem;
  text-transform:uppercase;
  line-height: 2 * \$baseline-height;
}
*/

.copy {
  display:block;
  max-width:$max-width;
  margin:0 auto;

  &__headline {
    font-family: font($slab, face);
    font-weight: font($slab, hairline);
    //font-family: font($condensed, face);
    font-size: 2.5rem;
    //font-weight: font($serif, bold);
    @include line-height(2);
    @include spacing($text, 1, 1);
  }

  &__subhead {
    background-color: $magenta;
    font-family: font($serif, face);
    font-size: 1rem;
    font-weight: font($serif, bold);
    @include line-height();
    @include spacing($text, 0, 0);
  }
}

.snap.one {
  overflow:hidden;
  //float:left;
  margin: 0 $baseline-height $baseline-height 0;
  @include snap-to-baseline(16/9);
  width:100%;
}

.snap.two {
  overflow:hidden;
  float:left;
  // margin: 0 $baseline-height $baseline-height 0;
  @include snap-to-baseline(9/9);
  width:50%;
}

.copy[max-width~="600px"] {
  .snap.one {
    float:left;
    width:60%;
  }

  .snap.two {
    //float:left;
    width:100%;
  }
}

// Just to illustrate :)
.copy,
.snap {
  transition: all .5s ease-in-out;
}


input, textarea {
  font-size: 1rem;
}
